name: Build & Publish ICC Image

on:
  schedule:
    - cron: '7 0 * * *'   # 01:07분 업데이트
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Latest Version
        run: |
          # 1️⃣ Curl 시도
          VER=$(curl -s -A "Mozilla/5.0" --max-time 10 http://download.iptime.co.kr/icc/icc_image.version | head -n1)
          if [[ -n "$VER" ]]; then
            echo "✅ Fetched latest version from ICC server: $VER"
            echo "$VER" > icc_version
          else
            # 2️⃣ 실패 시 외부 서버에서 업데이트 해 둔 icc_version 사용
            echo "❌ Failed to fetch version from ICC server, using repository icc_version file"
            if [ ! -f icc_version ]; then
              echo "⚠️ icc_version file not found in repository, using default 0_918"
              VER="0_918"
            else
              VER=$(head -n1 icc_version)
            fi
          fi

          echo "Using ICC version: $VER"
          echo "LATEST=$VER" >> $GITHUB_ENV

      - name: Download ICC Tarball
        run: |
          echo "Downloading ICC image for version $LATEST"
          wget -q https://download.iptime.co.kr/icc/icc_image_${LATEST}.tar.gz
          if [ $? -ne 0 ]; then
            echo "❌ Failed to download ICC image, exiting workflow."
            exit 1
          fi

      - name: Load Docker Image
        run: |
          docker load -i icc_image_${LATEST}.tar.gz

      - name: Tag & Push to GHCR
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/icc-docker
          IMAGE_ID=$(docker images -q | head -n 1)
          docker tag $IMAGE_ID $IMAGE:${LATEST}
          docker tag $IMAGE_ID $IMAGE:latest
          echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push $IMAGE:${LATEST}
          docker push $IMAGE:latest
