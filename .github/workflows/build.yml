name: Build & Publish ICC Image

on:
  schedule:
    - cron: '0 0 * * *'   # 매일 자정 실행
  workflow_dispatch:       # 수동 실행 가능

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Latest Version
        run: |
          # User-Agent 지정, 타임아웃 10초
          VER=$(curl -s -A "Mozilla/5.0" --max-time 10 http://download.iptime.co.kr/icc/icc_image.version | head -n1)
          # 접속 실패 또는 빈 문자열이면 기본값 사용
          if [[ -z "$VER" ]]; then
            echo "❌ Failed to get latest version, using default 0_918"
            VER="0_918"
          else
            echo "✅ Latest version: $VER"
          fi
      
          echo "LATEST=$VER" >> $GITHUB_ENV

      - name: Download ICC Tarball
        run: |
          echo "Downloading icc_image_${LATEST}.tar.gz..."
          wget -q "http://download.iptime.co.kr/icc/icc_image_${LATEST}.tar.gz" -O "icc_image_${LATEST}.tar.gz" || { echo "❌ Download failed"; exit 1; }
          echo "✅ Download complete"

      - name: Load Docker Image
        run: |
          echo "Loading Docker image from tar.gz..."
          docker load -i "icc_image_${LATEST}.tar.gz" || { echo "❌ Docker load failed"; exit 1; }
          echo "✅ Docker image loaded"

      - name: Tag & Push to GHCR
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/icc-docker
          IMAGE_ID=$(docker images -q | head -n 1)
          if [[ -z "$IMAGE_ID" ]]; then
            echo "❌ No Docker image found to tag."
            exit 1
          fi
          docker tag $IMAGE_ID $IMAGE:${LATEST}
          docker tag $IMAGE_ID $IMAGE:latest
          echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push $IMAGE:${LATEST}
          docker push $IMAGE:latest
          echo "✅ Docker image pushed to GHCR"
